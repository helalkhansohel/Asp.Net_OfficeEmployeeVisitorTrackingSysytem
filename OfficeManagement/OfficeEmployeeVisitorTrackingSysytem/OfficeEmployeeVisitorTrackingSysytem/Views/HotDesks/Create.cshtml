@model OfficeEmployeeVisitorTrackingSysytem.Models.HotDesk

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <center style="background-color:wheat;"><h2>Hot Desking</h2></center>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.EmployeeId, "EmployeeId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="hidden" id="type" name="type" value="@ViewBag.Type">
            @Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Password", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="password" id="pass" name="pass" class="form-control">

        </div>
    </div>
    @if (@ViewBag.Type != "2")
    {
        <div class="form-group">
            @Html.LabelFor(model => model.CompanyId, "CompanyId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CarNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    @*<div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogInTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LogInTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LogInTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogOutTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LogOutTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LogOutTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentStatus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentStatus, "", new { @class = "text-danger" })
            </div>
        </div>*@
    @if (ViewBag.Type != "2")
    {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sign In" class="btn btn-success" />
            </div>
        </div>
    }
    else
    { <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sign Out" class="btn btn-danger" />
            </div>
        </div>



    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @if (@ViewBag.Message != null)
            {
                if (ViewBag.Message == "LogIn")
                {

                    <span class="alert alert-success">Sign In sucessful</span>
                }
                else if (ViewBag.Message == "LogOut")
                {
                    <span class="alert alert-danger">Sign Out successful </span>

                }
                else
                {
                    <span class="alert alert-warning">@ViewBag.Message </span>
                }
            }
        </div>
    </div>
</div>
}


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
   
